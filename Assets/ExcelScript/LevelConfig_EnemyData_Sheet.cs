//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace ExcelConfig
{
	[Serializable]
	public class EnemyData : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private int _ID;
		public int ID { get { return _ID; } }

		[SerializeField]
		private string _prefab;
		public string prefab { get { return _prefab; } }

		[SerializeField]
		private int[] _skills;
		public int[] skills { get { return _skills; } }


		public EnemyData()
		{
		}

#if UNITY_EDITOR
		public EnemyData(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _ID);
			TryParse(sheet[row][column++], out _prefab);
			string[] _skillsArray = sheet[row][column++].Split(',');
			int _skillsCount = _skillsArray.Length;
			_skills = new int[_skillsCount];
			for(int i = 0; i < _skillsCount; i++)
				TryParse(_skillsArray[i], out _skills[i]);
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class LevelConfig_EnemyData_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<EnemyData> elements = new List<EnemyData>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as EnemyData);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
