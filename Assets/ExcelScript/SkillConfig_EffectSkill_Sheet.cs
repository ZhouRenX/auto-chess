//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace ExcelConfig
{
	[Serializable]
	public class EffectSkill : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private int _ID;
		public int ID { get { return _ID; } }

		[SerializeField]
		private string _name;
		public string name { get { return _name; } }

		[SerializeField]
		private string _emitFXPrefab;
		public string emitFXPrefab { get { return _emitFXPrefab; } }

		[SerializeField]
		private string _effectPrefab;
		public string effectPrefab { get { return _effectPrefab; } }

		[SerializeField]
		private string _hitFXPrefab;
		public string hitFXPrefab { get { return _hitFXPrefab; } }

		[SerializeField]
		private string _hexEffectPrefab;
		public string hexEffectPrefab { get { return _hexEffectPrefab; } }

		[SerializeField]
		private string[] _skillDecorators;
		public string[] skillDecorators { get { return _skillDecorators; } }


		public EffectSkill()
		{
		}

#if UNITY_EDITOR
		public EffectSkill(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _ID);
			TryParse(sheet[row][column++], out _name);
			TryParse(sheet[row][column++], out _emitFXPrefab);
			TryParse(sheet[row][column++], out _effectPrefab);
			TryParse(sheet[row][column++], out _hitFXPrefab);
			TryParse(sheet[row][column++], out _hexEffectPrefab);
			string[] _skillDecoratorsArray = sheet[row][column++].Split(',');
			int _skillDecoratorsCount = _skillDecoratorsArray.Length;
			_skillDecorators = new string[_skillDecoratorsCount];
			for(int i = 0; i < _skillDecoratorsCount; i++)
				TryParse(_skillDecoratorsArray[i], out _skillDecorators[i]);
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class SkillConfig_EffectSkill_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<EffectSkill> elements = new List<EffectSkill>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as EffectSkill);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
