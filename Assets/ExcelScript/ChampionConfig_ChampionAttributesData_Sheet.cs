//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace ExcelConfig
{
	[Serializable]
	public class ChampionAttributesData : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private string _ID;
		public string ID { get { return _ID; } }

		[SerializeField]
		private string _name;
		public string name { get { return _name; } }

		[SerializeField]
		private float _attackDamage;
		public float attackDamage { get { return _attackDamage; } }

		[SerializeField]
		private float _defenseArmor;
		public float defenseArmor { get { return _defenseArmor; } }

		[SerializeField]
		private float _attackRange;
		public float attackRange { get { return _attackRange; } }

		[SerializeField]
		private float _attackSpeed;
		public float attackSpeed { get { return _attackSpeed; } }

		[SerializeField]
		private float _moveSpeed;
		public float moveSpeed { get { return _moveSpeed; } }

		[SerializeField]
		private float _maxHealth;
		public float maxHealth { get { return _maxHealth; } }

		[SerializeField]
		private float _maxMana;
		public float maxMana { get { return _maxMana; } }


		public ChampionAttributesData()
		{
		}

#if UNITY_EDITOR
		public ChampionAttributesData(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _ID);
			TryParse(sheet[row][column++], out _name);
			TryParse(sheet[row][column++], out _attackDamage);
			TryParse(sheet[row][column++], out _defenseArmor);
			TryParse(sheet[row][column++], out _attackRange);
			TryParse(sheet[row][column++], out _attackSpeed);
			TryParse(sheet[row][column++], out _moveSpeed);
			TryParse(sheet[row][column++], out _maxHealth);
			TryParse(sheet[row][column++], out _maxMana);
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class ChampionConfig_ChampionAttributesData_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<ChampionAttributesData> elements = new List<ChampionAttributesData>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as ChampionAttributesData);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
