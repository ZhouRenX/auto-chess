//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace ExcelConfig
{
	[Serializable]
	public class BaseBuffData : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private int _ID;
		public int ID { get { return _ID; } }

		[SerializeField]
		private string _name;
		public string name { get { return _name; } }

		[SerializeField]
		private string _des;
		public string des { get { return _des; } }

		[SerializeField]
		private float _duration;
		public float duration { get { return _duration; } }

		[SerializeField]
		private float _intervalTime;
		public float intervalTime { get { return _intervalTime; } }

		[SerializeField]
		private int _layer;
		public int layer { get { return _layer; } }

		[SerializeField]
		private bool _bNoCaster;
		public bool bNoCaster { get { return _bNoCaster; } }

		[SerializeField]
		private string _activeMode;
		public string activeMode { get { return _activeMode; } }

		[SerializeField]
		private string _consumeMode;
		public string consumeMode { get { return _consumeMode; } }

		[SerializeField]
		private string _superposeMode;
		public string superposeMode { get { return _superposeMode; } }

		[SerializeField]
		private string _buffBehaviourScriptName;
		public string buffBehaviourScriptName { get { return _buffBehaviourScriptName; } }

		[Serializable]
		public class addBuffsClass
		{
			public int buff_ID;
			public float odds;
			public string targetType;
		}
		[SerializeField]
		private addBuffsClass[] _addBuffs;
		public addBuffsClass[] addBuffs { get { return _addBuffs; } }


		public BaseBuffData()
		{
		}

#if UNITY_EDITOR
		public BaseBuffData(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _ID);
			TryParse(sheet[row][column++], out _name);
			TryParse(sheet[row][column++], out _des);
			TryParse(sheet[row][column++], out _duration);
			TryParse(sheet[row][column++], out _intervalTime);
			TryParse(sheet[row][column++], out _layer);
			TryParse(sheet[row][column++], out _bNoCaster);
			TryParse(sheet[row][column++], out _activeMode);
			TryParse(sheet[row][column++], out _consumeMode);
			TryParse(sheet[row][column++], out _superposeMode);
			TryParse(sheet[row][column++], out _buffBehaviourScriptName);
			string rawaddBuffs = sheet[row][column++];
			string[] subsaddBuffs_0 = rawaddBuffs.Split(';');
			_addBuffs = new addBuffsClass[subsaddBuffs_0.Length];
			for (int j = 0; j < subsaddBuffs_0.Length; ++j)
			{
				var _addBuffsone = new addBuffsClass();
				_addBuffs[j] = _addBuffsone;
				string[] subsaddBuffs_1 = subsaddBuffs_0[j].Split(',');
				for (int i = 0; i < subsaddBuffs_1.Length; ++i)
				{
					var strValue = subsaddBuffs_1[i];
					if (i == 0)
						TryParse(strValue, out _addBuffsone.buff_ID);
					else if (i == 1)
						TryParse(strValue, out _addBuffsone.odds);
					else if (i == 2)
						TryParse(strValue, out _addBuffsone.targetType);
				}
			}
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class BuffConfig_BaseBuffData_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<BaseBuffData> elements = new List<BaseBuffData>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as BaseBuffData);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
